### Filas (Queues)

As filas são estruturas de dados lineares em que a ordem de inserção dos elementos determina a ordem de remoção. Elas seguem o princípio **FIFO** (First-In, First-Out), ou seja, o primeiro elemento inserido é o primeiro a ser removido.

#### Analogia:
Pense em uma fila de espera em um caixa de supermercado. A pessoa que está no início da fila é atendida primeiro, enquanto as novas pessoas que chegam entram no final da fila.

---

### Características das Filas

- **Operações de Inserção (Enqueue):** São feitas na extremidade chamada "traseira" da fila.
- **Operações de Remoção (Dequeue):** São feitas na extremidade oposta, chamada "frente" da fila.

---

### Implementação de Filas Usando Arranjos

- Os elementos são armazenados em posições contíguas na memória.
  
- **Enfileirar (Enqueue):** 
  - Adiciona um novo elemento ao final da fila.

- **Desenfileirar (Dequeue):**
  - Remove o elemento do início da fila.

#### Problema Comum:
À medida que elementos são inseridos no final e removidos do início, a fila tende a "mover-se" para frente na memória. Isso pode levar a um problema onde a fila atinge o limite do espaço alocado, mesmo que existam espaços livres no início do array.

#### Solução:
Para resolver esse problema, podemos tratar o array como se fosse circular. Isso significa que, quando o final da fila atinge o final do array, ele "envolve" e começa novamente a partir do início do array, se houver espaço disponível.

---

### Filas Circulares

Em uma fila circular, a primeira posição do array segue a última, formando um "círculo".

- **Enfileirar (Enqueue):**
  - Adiciona um elemento na posição apontada por "Trás".
  - Movimenta o apontador "Trás" uma posição para frente (sentido horário).
  - Se "Trás" atingir o final do array, ele se move para o início, se houver espaço.

- **Desenfileirar (Dequeue):**
  - Remove o elemento da posição apontada por "Frente".
  - Movimenta o apontador "Frente" uma posição para frente.
  - Se "Frente" atingir o final do array, ele se move para o início.

---

### Vantagens da Implementação Circular

- **Eficiência no Uso de Memória:**
  - Evita o desperdício de espaço na memória, já que o espaço no início do array pode ser reutilizado quando o final da fila atinge o limite.

- **Operações Constantes:**
  - Tanto as operações de enfileirar quanto as de desenfileirar são realizadas em tempo constante O(1), pois apenas envolvem a movimentação de apontadores e, no máximo, a atualização de índices.

---

### Visualização

Imagine um array com índices de 0 a 4. Uma fila circular começando no índice 0 e terminando no índice 4 envolverá o "Trás" de volta para o início do array quando for enfileirado um novo elemento e "Trás" já estiver na posição 4.

#### Exemplo de movimentação em uma fila circular:

